// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector;
class UAdvKitZoneLocation;
struct FRotator;
class AAdvKitZone;
class AAdvKitCharacter;
class UAdvKitTransitionComponent;
class UAdvKitTransitionComponentArea;
class UAdvKitTransitionComponentPoint;
#ifdef ADVKITRUNTIME_AdvKitZone_generated_h
#error "AdvKitZone.generated.h already included, missing '#pragma once' in AdvKitZone.h"
#endif
#define ADVKITRUNTIME_AdvKitZone_generated_h

#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_RPC_WRAPPERS \
	virtual FVector ConstrainDirectionToZone_Implementation(const FVector& WorldDirection, const FVector& AtWorldLocation); \
	virtual UAdvKitZoneLocation* GetClosestZoneLocation_Implementation(const FVector& WorldPosition, const FVector& HalfExtent, const FRotator& ExtentWorldRotation); \
	virtual FVector ConstrainPositionToZone_Implementation(const FVector& WorldPosition, const FVector& HalfExtent, const FRotator& ExtentWorldRotation); \
	virtual FVector GetPositionInDirection_Implementation(const FVector& FromWorldPosition, const FVector& WorldDesiredDelta, bool bClamp, const FVector& HalfExtent, const FRotator& ExtentWorldRotation); \
	virtual void GenerateTransitions_Implementation(bool bZoneMoved); \
 \
	DECLARE_FUNCTION(execHasCustomPhysics) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_QueryPhysics); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasCustomPhysics(Z_Param_QueryPhysics); \
	} \
 \
	DECLARE_FUNCTION(execHasPhysics) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_QueryPhysics); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasPhysics(EAdvKitMovementMode(Z_Param_QueryPhysics)); \
	} \
 \
	DECLARE_FUNCTION(execGetCustomPhysics) \
	{ \
		P_FINISH; \
		*(uint8*)Z_Param__Result=this->GetCustomPhysics(); \
	} \
 \
	DECLARE_FUNCTION(execGetPhysics) \
	{ \
		P_FINISH; \
		*(TEnumAsByte<EAdvKitMovementMode>*)Z_Param__Result=this->GetPhysics(); \
	} \
 \
	DECLARE_FUNCTION(execConstrainDirectionToZone) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDirection); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_AtWorldLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->ConstrainDirectionToZone_Implementation(Z_Param_Out_WorldDirection,Z_Param_Out_AtWorldLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetClosestZoneLocation) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(UAdvKitZoneLocation**)Z_Param__Result=this->GetClosestZoneLocation_Implementation(Z_Param_Out_WorldPosition,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execConstrainPositionToZone) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->ConstrainPositionToZone_Implementation(Z_Param_Out_WorldPosition,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneUpVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneUpVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneRightVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneRightVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneForwardVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneForwardVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execMoveLocationInDirection) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_LocationToMove); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDesiredDelta); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->MoveLocationInDirection(Z_Param_LocationToMove,Z_Param_Out_WorldDesiredDelta,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetPositionInDirection) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_FromWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDesiredDelta); \
		P_GET_UBOOL(Z_Param_bClamp); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetPositionInDirection_Implementation(Z_Param_Out_FromWorldPosition,Z_Param_Out_WorldDesiredDelta,Z_Param_bClamp,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execRemoveExistingTransitionsTo) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Other); \
		P_FINISH; \
		this->RemoveExistingTransitionsTo(Z_Param_Other); \
	} \
 \
	DECLARE_FUNCTION(execAddTransition) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_For); \
		P_GET_OBJECT(UAdvKitTransitionComponent,Z_Param_Transition); \
		P_FINISH; \
		this->AddTransition(Z_Param_For,Z_Param_Transition); \
	} \
 \
	DECLARE_FUNCTION(execRegisterTransitionArea) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MinWorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MinWorldTargetLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MaxWorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MaxWorldTargetLocation); \
		P_GET_OBJECT(UClass,Z_Param_ForCharacter); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MovementMode); \
		P_GET_OBJECT(AAdvKitZone,Z_Param_TargetZone); \
		P_GET_PROPERTY(UByteProperty,Z_Param_CustomMovementMode); \
		P_FINISH; \
		*(UAdvKitTransitionComponentArea**)Z_Param__Result=this->RegisterTransitionArea(Z_Param_Out_MinWorldSourceLocation,Z_Param_Out_MinWorldTargetLocation,Z_Param_Out_MaxWorldSourceLocation,Z_Param_Out_MaxWorldTargetLocation,Z_Param_ForCharacter,EAdvKitMovementMode(Z_Param_MovementMode),Z_Param_TargetZone,Z_Param_CustomMovementMode); \
	} \
 \
	DECLARE_FUNCTION(execRegisterTransition) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldTargetLocation); \
		P_GET_OBJECT(UClass,Z_Param_ForCharacter); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MovementMode); \
		P_GET_OBJECT(AAdvKitZone,Z_Param_TargetZone); \
		P_GET_PROPERTY(UByteProperty,Z_Param_CustomMovementMode); \
		P_FINISH; \
		*(UAdvKitTransitionComponentPoint**)Z_Param__Result=this->RegisterTransition(Z_Param_Out_WorldSourceLocation,Z_Param_Out_WorldTargetLocation,Z_Param_ForCharacter,EAdvKitMovementMode(Z_Param_MovementMode),Z_Param_TargetZone,Z_Param_CustomMovementMode); \
	} \
 \
	DECLARE_FUNCTION(execGenerateTransitions) \
	{ \
		P_GET_UBOOL(Z_Param_bZoneMoved); \
		P_FINISH; \
		this->GenerateTransitions_Implementation(Z_Param_bZoneMoved); \
	}


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execHasCustomPhysics) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_QueryPhysics); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasCustomPhysics(Z_Param_QueryPhysics); \
	} \
 \
	DECLARE_FUNCTION(execHasPhysics) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_QueryPhysics); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->HasPhysics(EAdvKitMovementMode(Z_Param_QueryPhysics)); \
	} \
 \
	DECLARE_FUNCTION(execGetCustomPhysics) \
	{ \
		P_FINISH; \
		*(uint8*)Z_Param__Result=this->GetCustomPhysics(); \
	} \
 \
	DECLARE_FUNCTION(execGetPhysics) \
	{ \
		P_FINISH; \
		*(TEnumAsByte<EAdvKitMovementMode>*)Z_Param__Result=this->GetPhysics(); \
	} \
 \
	DECLARE_FUNCTION(execConstrainDirectionToZone) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDirection); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_AtWorldLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->ConstrainDirectionToZone_Implementation(Z_Param_Out_WorldDirection,Z_Param_Out_AtWorldLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetClosestZoneLocation) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(UAdvKitZoneLocation**)Z_Param__Result=this->GetClosestZoneLocation_Implementation(Z_Param_Out_WorldPosition,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execConstrainPositionToZone) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->ConstrainPositionToZone_Implementation(Z_Param_Out_WorldPosition,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneUpVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneUpVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneRightVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneRightVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneForwardVector) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetZoneForwardVector(Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execMoveLocationInDirection) \
	{ \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_LocationToMove); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDesiredDelta); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->MoveLocationInDirection(Z_Param_LocationToMove,Z_Param_Out_WorldDesiredDelta,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetPositionInDirection) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_FromWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldDesiredDelta); \
		P_GET_UBOOL(Z_Param_bClamp); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_ExtentWorldRotation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetPositionInDirection_Implementation(Z_Param_Out_FromWorldPosition,Z_Param_Out_WorldDesiredDelta,Z_Param_bClamp,Z_Param_Out_HalfExtent,Z_Param_Out_ExtentWorldRotation); \
	} \
 \
	DECLARE_FUNCTION(execRemoveExistingTransitionsTo) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Other); \
		P_FINISH; \
		this->RemoveExistingTransitionsTo(Z_Param_Other); \
	} \
 \
	DECLARE_FUNCTION(execAddTransition) \
	{ \
		P_GET_OBJECT(UClass,Z_Param_For); \
		P_GET_OBJECT(UAdvKitTransitionComponent,Z_Param_Transition); \
		P_FINISH; \
		this->AddTransition(Z_Param_For,Z_Param_Transition); \
	} \
 \
	DECLARE_FUNCTION(execRegisterTransitionArea) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MinWorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MinWorldTargetLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MaxWorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_MaxWorldTargetLocation); \
		P_GET_OBJECT(UClass,Z_Param_ForCharacter); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MovementMode); \
		P_GET_OBJECT(AAdvKitZone,Z_Param_TargetZone); \
		P_GET_PROPERTY(UByteProperty,Z_Param_CustomMovementMode); \
		P_FINISH; \
		*(UAdvKitTransitionComponentArea**)Z_Param__Result=this->RegisterTransitionArea(Z_Param_Out_MinWorldSourceLocation,Z_Param_Out_MinWorldTargetLocation,Z_Param_Out_MaxWorldSourceLocation,Z_Param_Out_MaxWorldTargetLocation,Z_Param_ForCharacter,EAdvKitMovementMode(Z_Param_MovementMode),Z_Param_TargetZone,Z_Param_CustomMovementMode); \
	} \
 \
	DECLARE_FUNCTION(execRegisterTransition) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldSourceLocation); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_WorldTargetLocation); \
		P_GET_OBJECT(UClass,Z_Param_ForCharacter); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MovementMode); \
		P_GET_OBJECT(AAdvKitZone,Z_Param_TargetZone); \
		P_GET_PROPERTY(UByteProperty,Z_Param_CustomMovementMode); \
		P_FINISH; \
		*(UAdvKitTransitionComponentPoint**)Z_Param__Result=this->RegisterTransition(Z_Param_Out_WorldSourceLocation,Z_Param_Out_WorldTargetLocation,Z_Param_ForCharacter,EAdvKitMovementMode(Z_Param_MovementMode),Z_Param_TargetZone,Z_Param_CustomMovementMode); \
	} \
 \
	DECLARE_FUNCTION(execGenerateTransitions) \
	{ \
		P_GET_UBOOL(Z_Param_bZoneMoved); \
		P_FINISH; \
		this->GenerateTransitions_Implementation(Z_Param_bZoneMoved); \
	}


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_EVENT_PARMS \
	struct AdvKitZone_eventConstrainDirectionToZone_Parms \
	{ \
		FVector WorldDirection; \
		FVector AtWorldLocation; \
		FVector ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		AdvKitZone_eventConstrainDirectionToZone_Parms() \
			: ReturnValue(ForceInit) \
		{ \
		} \
	}; \
	struct AdvKitZone_eventConstrainPositionToZone_Parms \
	{ \
		FVector WorldPosition; \
		FVector HalfExtent; \
		FRotator ExtentWorldRotation; \
		FVector ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		AdvKitZone_eventConstrainPositionToZone_Parms() \
			: ReturnValue(ForceInit) \
		{ \
		} \
	}; \
	struct AdvKitZone_eventGenerateTransitions_Parms \
	{ \
		bool bZoneMoved; \
	}; \
	struct AdvKitZone_eventGetClosestZoneLocation_Parms \
	{ \
		FVector WorldPosition; \
		FVector HalfExtent; \
		FRotator ExtentWorldRotation; \
		UAdvKitZoneLocation* ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		AdvKitZone_eventGetClosestZoneLocation_Parms() \
			: ReturnValue(NULL) \
		{ \
		} \
	}; \
	struct AdvKitZone_eventGetPositionInDirection_Parms \
	{ \
		FVector FromWorldPosition; \
		FVector WorldDesiredDelta; \
		bool bClamp; \
		FVector HalfExtent; \
		FRotator ExtentWorldRotation; \
		FVector ReturnValue; \
 \
		/** Constructor, intializes return property only **/ \
		AdvKitZone_eventGetPositionInDirection_Parms() \
			: ReturnValue(ForceInit) \
		{ \
		} \
	};


extern ADVKITRUNTIME_API  FName ADVKITRUNTIME_ConstrainDirectionToZone;
extern ADVKITRUNTIME_API  FName ADVKITRUNTIME_ConstrainPositionToZone;
extern ADVKITRUNTIME_API  FName ADVKITRUNTIME_GenerateTransitions;
extern ADVKITRUNTIME_API  FName ADVKITRUNTIME_GetClosestZoneLocation;
extern ADVKITRUNTIME_API  FName ADVKITRUNTIME_GetPositionInDirection;
#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_CALLBACK_WRAPPERS
#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesAAdvKitZone(); \
	friend ADVKITRUNTIME_API class UClass* Z_Construct_UClass_AAdvKitZone(); \
	public: \
	DECLARE_CLASS(AAdvKitZone, AActor, COMPILED_IN_FLAGS(CLASS_Abstract), 0, TEXT("/Script/AdvKitRuntime"), NO_API) \
	DECLARE_SERIALIZER(AAdvKitZone) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_INCLASS \
	private: \
	static void StaticRegisterNativesAAdvKitZone(); \
	friend ADVKITRUNTIME_API class UClass* Z_Construct_UClass_AAdvKitZone(); \
	public: \
	DECLARE_CLASS(AAdvKitZone, AActor, COMPILED_IN_FLAGS(CLASS_Abstract), 0, TEXT("/Script/AdvKitRuntime"), NO_API) \
	DECLARE_SERIALIZER(AAdvKitZone) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API AAdvKitZone(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AAdvKitZone) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AAdvKitZone); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AAdvKitZone); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API AAdvKitZone(const AAdvKitZone& InCopy); \
public:


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_ENHANCED_CONSTRUCTORS \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API AAdvKitZone(const AAdvKitZone& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AAdvKitZone); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AAdvKitZone); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AAdvKitZone)


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_22_PROLOG \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_EVENT_PARMS


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_RPC_WRAPPERS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_CALLBACK_WRAPPERS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_INCLASS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_RPC_WRAPPERS_NO_PURE_DECLS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_CALLBACK_WRAPPERS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_INCLASS_NO_PURE_DECLS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h_25_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Environment_AdvKitZone_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
