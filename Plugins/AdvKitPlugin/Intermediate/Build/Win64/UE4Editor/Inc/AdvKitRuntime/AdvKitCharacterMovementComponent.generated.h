// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector;
struct FRotator;
class AAdvKitZone;
class UAdvKitZoneLocation;
class UAdvKitTransitionComponent;
#ifdef ADVKITRUNTIME_AdvKitCharacterMovementComponent_generated_h
#error "AdvKitCharacterMovementComponent.generated.h already included, missing '#pragma once' in AdvKitCharacterMovementComponent.h"
#endif
#define ADVKITRUNTIME_AdvKitCharacterMovementComponent_generated_h

#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_14_GENERATED_BODY \
	friend ADVKITRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FAdvKitMovementProperties(); \
	ADVKITRUNTIME_API static class UScriptStruct* StaticStruct();


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execAccumulateRootMotion) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_MovementDelta); \
		P_GET_STRUCT(FRotator,Z_Param_NewRotation); \
		P_FINISH; \
		this->AccumulateRootMotion(Z_Param_MovementDelta,Z_Param_NewRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetGlobalLocationInZone) \
	{ \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetGlobalLocationInZone(); \
	} \
 \
	DECLARE_FUNCTION(execGetHalfExtentForZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetHalfExtentForZone(Z_Param_Zone); \
	} \
 \
	DECLARE_FUNCTION(execGetDesiredOffsetFromZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetDesiredOffsetFromZone(Z_Param_Zone,Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetDesiredRotationInZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FRotator*)Z_Param__Result=this->GetDesiredRotationInZone(Z_Param_Zone,Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execPhysMoveInZone) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_GlobalAcceleration); \
		P_GET_STRUCT(FVector,Z_Param_WorldOffset); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_UBOOL(Z_Param_bAutoTransition); \
		P_GET_UBOOL(Z_Param_ConstrainAcceleration); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->PhysMoveInZone(Z_Param_GlobalAcceleration,Z_Param_WorldOffset,Z_Param_DeltaSeconds,Z_Param_Out_HalfExtent,Z_Param_bAutoTransition,Z_Param_ConstrainAcceleration); \
	} \
 \
	DECLARE_FUNCTION(execMoveLocationInZone) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_GlobalAcceleration); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_UBOOL(Z_Param_bAutoTransition); \
		P_GET_UBOOL(Z_Param_ConstrainAcceleration); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->MoveLocationInZone(Z_Param_GlobalAcceleration,Z_Param_DeltaSeconds,Z_Param_Out_HalfExtent,Z_Param_bAutoTransition,Z_Param_ConstrainAcceleration); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneLocation) \
	{ \
		P_FINISH; \
		*(UAdvKitZoneLocation**)Z_Param__Result=this->GetZoneLocation(); \
	} \
 \
	DECLARE_FUNCTION(execGetZone) \
	{ \
		P_FINISH; \
		*(AAdvKitZone**)Z_Param__Result=this->GetZone(); \
	} \
 \
	DECLARE_FUNCTION(execChangeTargetBalance) \
	{ \
		P_FINISH; \
		this->ChangeTargetBalance(); \
	} \
 \
	DECLARE_FUNCTION(execGetAdvCustomMovementMode) \
	{ \
		P_FINISH; \
		*(uint8*)Z_Param__Result=this->GetAdvCustomMovementMode(); \
	} \
 \
	DECLARE_FUNCTION(execGetAdvMovementMode) \
	{ \
		P_FINISH; \
		*(TEnumAsByte<EAdvKitMovementMode>*)Z_Param__Result=this->GetAdvMovementMode(); \
	} \
 \
	DECLARE_FUNCTION(execCanTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->CanTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execGetPossibleTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(UAdvKitTransitionComponent**)Z_Param__Result=this->GetPossibleTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execTryToTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->TryToTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execJumpUpZone) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->JumpUpZone(); \
	} \
 \
	DECLARE_FUNCTION(execLetGoOfZone) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->LetGoOfZone(); \
	} \
 \
	DECLARE_FUNCTION(execSetAdvMovementMode) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_NewMovementMode); \
		P_GET_PROPERTY(UByteProperty,Z_Param_NewCustomMode); \
		P_FINISH; \
		this->SetAdvMovementMode(EAdvKitMovementMode(Z_Param_NewMovementMode),Z_Param_NewCustomMode); \
	}


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execAccumulateRootMotion) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_MovementDelta); \
		P_GET_STRUCT(FRotator,Z_Param_NewRotation); \
		P_FINISH; \
		this->AccumulateRootMotion(Z_Param_MovementDelta,Z_Param_NewRotation); \
	} \
 \
	DECLARE_FUNCTION(execGetGlobalLocationInZone) \
	{ \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetGlobalLocationInZone(); \
	} \
 \
	DECLARE_FUNCTION(execGetHalfExtentForZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetHalfExtentForZone(Z_Param_Zone); \
	} \
 \
	DECLARE_FUNCTION(execGetDesiredOffsetFromZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=this->GetDesiredOffsetFromZone(Z_Param_Zone,Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execGetDesiredRotationInZone) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_Zone); \
		P_GET_OBJECT(UAdvKitZoneLocation,Z_Param_AtLocation); \
		P_FINISH; \
		*(FRotator*)Z_Param__Result=this->GetDesiredRotationInZone(Z_Param_Zone,Z_Param_AtLocation); \
	} \
 \
	DECLARE_FUNCTION(execPhysMoveInZone) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_GlobalAcceleration); \
		P_GET_STRUCT(FVector,Z_Param_WorldOffset); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_UBOOL(Z_Param_bAutoTransition); \
		P_GET_UBOOL(Z_Param_ConstrainAcceleration); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->PhysMoveInZone(Z_Param_GlobalAcceleration,Z_Param_WorldOffset,Z_Param_DeltaSeconds,Z_Param_Out_HalfExtent,Z_Param_bAutoTransition,Z_Param_ConstrainAcceleration); \
	} \
 \
	DECLARE_FUNCTION(execMoveLocationInZone) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_GlobalAcceleration); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_HalfExtent); \
		P_GET_UBOOL(Z_Param_bAutoTransition); \
		P_GET_UBOOL(Z_Param_ConstrainAcceleration); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->MoveLocationInZone(Z_Param_GlobalAcceleration,Z_Param_DeltaSeconds,Z_Param_Out_HalfExtent,Z_Param_bAutoTransition,Z_Param_ConstrainAcceleration); \
	} \
 \
	DECLARE_FUNCTION(execGetZoneLocation) \
	{ \
		P_FINISH; \
		*(UAdvKitZoneLocation**)Z_Param__Result=this->GetZoneLocation(); \
	} \
 \
	DECLARE_FUNCTION(execGetZone) \
	{ \
		P_FINISH; \
		*(AAdvKitZone**)Z_Param__Result=this->GetZone(); \
	} \
 \
	DECLARE_FUNCTION(execChangeTargetBalance) \
	{ \
		P_FINISH; \
		this->ChangeTargetBalance(); \
	} \
 \
	DECLARE_FUNCTION(execGetAdvCustomMovementMode) \
	{ \
		P_FINISH; \
		*(uint8*)Z_Param__Result=this->GetAdvCustomMovementMode(); \
	} \
 \
	DECLARE_FUNCTION(execGetAdvMovementMode) \
	{ \
		P_FINISH; \
		*(TEnumAsByte<EAdvKitMovementMode>*)Z_Param__Result=this->GetAdvMovementMode(); \
	} \
 \
	DECLARE_FUNCTION(execCanTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->CanTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execGetPossibleTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(UAdvKitTransitionComponent**)Z_Param__Result=this->GetPossibleTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execTryToTransition) \
	{ \
		P_GET_OBJECT(AAdvKitZone,Z_Param_ForZone); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_ForWorldPosition); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_InWorldDirection); \
		P_GET_UBOOL(Z_Param_bIsJump); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->TryToTransition(Z_Param_ForZone,Z_Param_Out_ForWorldPosition,Z_Param_Out_InWorldDirection,Z_Param_bIsJump); \
	} \
 \
	DECLARE_FUNCTION(execJumpUpZone) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->JumpUpZone(); \
	} \
 \
	DECLARE_FUNCTION(execLetGoOfZone) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->LetGoOfZone(); \
	} \
 \
	DECLARE_FUNCTION(execSetAdvMovementMode) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_NewMovementMode); \
		P_GET_PROPERTY(UByteProperty,Z_Param_NewCustomMode); \
		P_FINISH; \
		this->SetAdvMovementMode(EAdvKitMovementMode(Z_Param_NewMovementMode),Z_Param_NewCustomMode); \
	}


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUAdvKitCharacterMovementComponent(); \
	friend ADVKITRUNTIME_API class UClass* Z_Construct_UClass_UAdvKitCharacterMovementComponent(); \
	public: \
	DECLARE_CLASS(UAdvKitCharacterMovementComponent, UCharacterMovementComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/AdvKitRuntime"), NO_API) \
	DECLARE_SERIALIZER(UAdvKitCharacterMovementComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_INCLASS \
	private: \
	static void StaticRegisterNativesUAdvKitCharacterMovementComponent(); \
	friend ADVKITRUNTIME_API class UClass* Z_Construct_UClass_UAdvKitCharacterMovementComponent(); \
	public: \
	DECLARE_CLASS(UAdvKitCharacterMovementComponent, UCharacterMovementComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/AdvKitRuntime"), NO_API) \
	DECLARE_SERIALIZER(UAdvKitCharacterMovementComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UAdvKitCharacterMovementComponent(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UAdvKitCharacterMovementComponent) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UAdvKitCharacterMovementComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UAdvKitCharacterMovementComponent); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UAdvKitCharacterMovementComponent(const UAdvKitCharacterMovementComponent& InCopy); \
public:


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_ENHANCED_CONSTRUCTORS \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UAdvKitCharacterMovementComponent(const UAdvKitCharacterMovementComponent& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UAdvKitCharacterMovementComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UAdvKitCharacterMovementComponent); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UAdvKitCharacterMovementComponent)


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_56_PROLOG
#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_RPC_WRAPPERS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_INCLASS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_RPC_WRAPPERS_NO_PURE_DECLS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_INCLASS_NO_PURE_DECLS \
	projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h_59_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID projectvelorum_Plugins_AdvKitPlugin_Source_AdvKitRuntime_Classes_Player_AdvKitCharacterMovementComponent_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
