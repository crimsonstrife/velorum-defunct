// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/OffscreenIndicatorPrivatePCH.h"
#include "OffscreenIndicator.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeOffscreenIndicator() {}
	void UHUDBlueprintLibrary::StaticRegisterNativesUHUDBlueprintLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "FindScreenLocationForWorldLocation",(Native)&UHUDBlueprintLibrary::execFindScreenLocationForWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "GetCurrentLevelName",(Native)&UHUDBlueprintLibrary::execGetCurrentLevelName);
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "IsPointOnScreenWithinDistance",(Native)&UHUDBlueprintLibrary::execIsPointOnScreenWithinDistance);
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "Projected2DBoundsBoxForActor",(Native)&UHUDBlueprintLibrary::execProjected2DBoundsBoxForActor);
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "Projected2DBoundsBoxForBoxComponent",(Native)&UHUDBlueprintLibrary::execProjected2DBoundsBoxForBoxComponent);
		FNativeFunctionRegistrar::RegisterFunction(UHUDBlueprintLibrary::StaticClass(), "Projected2DBoundsWithOriginAndExtent",(Native)&UHUDBlueprintLibrary::execProjected2DBoundsWithOriginAndExtent);
	}
	IMPLEMENT_CLASS(UHUDBlueprintLibrary, 1993519700);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_FindScreenLocationForWorldLocation();
	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_GetCurrentLevelName();
	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_IsPointOnScreenWithinDistance();
	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForActor();
	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForBoxComponent();
	OFFSCREENINDICATOR_API class UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsWithOriginAndExtent();
	OFFSCREENINDICATOR_API class UClass* Z_Construct_UClass_UHUDBlueprintLibrary_NoRegister();
	OFFSCREENINDICATOR_API class UClass* Z_Construct_UClass_UHUDBlueprintLibrary();
	OFFSCREENINDICATOR_API class UPackage* Z_Construct_UPackage__Script_OffscreenIndicator();
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_FindScreenLocationForWorldLocation()
	{
		struct HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms
		{
			UObject* WorldContextObject;
			FVector InLocation;
			float EdgePercent;
			FVector2D OutScreenPosition;
			float OutRotationAngleDegrees;
			bool bIsOnScreen;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindScreenLocationForWorldLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsOnScreen, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms, bool);
			UProperty* NewProp_bIsOnScreen = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsOnScreen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsOnScreen, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bIsOnScreen, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_OutRotationAngleDegrees = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutRotationAngleDegrees"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(OutRotationAngleDegrees, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000000000180);
			UProperty* NewProp_OutScreenPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutScreenPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutScreenPosition, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_EdgePercent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EdgePercent"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EdgePercent, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000000000082);
			UProperty* NewProp_InLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InLocation, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventFindScreenLocationForWorldLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("CallableWithoutWorldContext"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Converts a world location to screen position for HUD drawing. This differs from the results of FSceneView::WorldToScreen in that it returns a position along the edge of the screen for offscreen locations\n\n@param               InLocation      - The world space location to be converted to screen space\n@param               EdgePercent - How close to the edge of the screen, 1.0 = at edge, 0.0 = at center of screen. .9 or .95 is usually desirable\n@outparam    OutScreenPosition - the screen coordinates for HUD drawing\n@outparam    OutRotationAngleDegrees - The angle to rotate a hud element if you want it pointing toward the offscreen indicator, 0\x00b0 if onscreen\n@outparam    bIsOnScreen - True if the specified location is in the camera view (may be obstructed)"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_GetCurrentLevelName()
	{
		struct HUDBlueprintLibrary_eventGetCurrentLevelName_Parms
		{
			UObject* WorldContextObject;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCurrentLevelName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(HUDBlueprintLibrary_eventGetCurrentLevelName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, HUDBlueprintLibrary_eventGetCurrentLevelName_Parms), 0x0010000000000580);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventGetCurrentLevelName_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the name of the current map. Useful for restarting a level"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_IsPointOnScreenWithinDistance()
	{
		struct HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms
		{
			UObject* WorldContextObject;
			FVector InWorldLocation;
			float InMaxDistance;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPointOnScreenWithinDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms), sizeof(bool), true);
			UProperty* NewProp_InMaxDistance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InMaxDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InMaxDistance, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms), 0x0010000008000182);
			UProperty* NewProp_InWorldLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InWorldLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InWorldLocation, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventIsPointOnScreenWithinDistance_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("CallableWithoutWorldContext"), TEXT(""));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Identifies whether a given world location is currently on screen and within a specified range of the local player.\n\n@param               InLocation      - The world space location to be converted to screen space\n@param               InMaxDistance - The maximum distance from the camera to consider\n@result              True if the specified location is in the camera view (may be obstructed)"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForActor()
	{
		struct HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms
		{
			UObject* WorldContextObject;
			const AActor* Actor;
			FVector2D OutCenter;
			FVector2D OutSize;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Projected2DBoundsBoxForActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms));
			UProperty* NewProp_OutSize = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutSize, HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_OutCenter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutCenter"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutCenter, HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventProjected2DBoundsBoxForActor_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the 2D bounding box for an actor for highlighting in a HUD\n\n@param               Actor           The actor you want the 2D bounding box for\n@outparam    OutCenter       The center of the actor in screen coordinates\n@outparam    OutSize         The size of hte actor in screen pixels"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForBoxComponent()
	{
		struct HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms
		{
			UObject* WorldContextObject;
			const UBoxComponent* Component;
			FVector2D OutCenter;
			FVector2D OutSize;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Projected2DBoundsBoxForBoxComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms));
			UProperty* NewProp_OutSize = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutSize, HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_OutCenter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutCenter"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutCenter, HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Component, HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms), 0x0010000000080082, Z_Construct_UClass_UBoxComponent_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventProjected2DBoundsBoxForBoxComponent_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the 2D bounding box for a box component for highlighting in a HUD\n\n@param               Component       The box component you want the 2D bounding box for\n@outparam    OutCenter       The center of the actor in screen coordinates\n@outparam    OutSize         The size of hte actor in screen pixels"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_Component, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsWithOriginAndExtent()
	{
		struct HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms
		{
			UObject* WorldContextObject;
			FVector Origin;
			FVector Extents;
			FVector2D OutCenter;
			FVector2D OutSize;
		};
		UObject* Outer=Z_Construct_UClass_UHUDBlueprintLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Projected2DBoundsWithOriginAndExtent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms));
			UProperty* NewProp_OutSize = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutSize, HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_OutCenter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutCenter"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutCenter, HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Extents = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Extents"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Extents, HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Origin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Origin"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Origin, HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, HUDBlueprintLibrary_eventProjected2DBoundsWithOriginAndExtent_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Republic Sniper|HUD|Util"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a 2D bounding box given an origin and an extents\n\n@param               Origin          The world space origin\n@param               Extents         The extents\n@outparam    OutCenter       The center of the actor in screen coordinates\n@outparam    OutSize         The size of hte actor in screen pixels"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UHUDBlueprintLibrary_NoRegister()
	{
		return UHUDBlueprintLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UHUDBlueprintLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_OffscreenIndicator();
			OuterClass = UHUDBlueprintLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_FindScreenLocationForWorldLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_GetCurrentLevelName());
				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_IsPointOnScreenWithinDistance());
				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForBoxComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsWithOriginAndExtent());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_FindScreenLocationForWorldLocation(), "FindScreenLocationForWorldLocation"); // 3674795795
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_GetCurrentLevelName(), "GetCurrentLevelName"); // 3896614509
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_IsPointOnScreenWithinDistance(), "IsPointOnScreenWithinDistance"); // 2206226854
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForActor(), "Projected2DBoundsBoxForActor"); // 3116555402
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsBoxForBoxComponent(), "Projected2DBoundsBoxForBoxComponent"); // 747754423
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHUDBlueprintLibrary_Projected2DBoundsWithOriginAndExtent(), "Projected2DBoundsWithOriginAndExtent"); // 1860570750
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HUDBlueprintLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/HUDBlueprintLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UHUDBlueprintLibrary(Z_Construct_UClass_UHUDBlueprintLibrary, &UHUDBlueprintLibrary::StaticClass, TEXT("UHUDBlueprintLibrary"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UHUDBlueprintLibrary);
	UPackage* Z_Construct_UPackage__Script_OffscreenIndicator()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/OffscreenIndicator")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x91B9054D;
			Guid.B = 0xB904DE6F;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
