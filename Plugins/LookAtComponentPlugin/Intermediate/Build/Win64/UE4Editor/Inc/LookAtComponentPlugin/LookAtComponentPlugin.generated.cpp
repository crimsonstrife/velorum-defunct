// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/LookAtComponentPluginPrivatePCH.h"
#include "LookAtComponentPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeLookAtComponentPlugin() {}
	void ULookAtMovementComponent::StaticRegisterNativesULookAtMovementComponent()
	{
	}
	IMPLEMENT_CLASS(ULookAtMovementComponent, 2995690140);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UMovementComponent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();

	LOOKATCOMPONENTPLUGIN_API class UClass* Z_Construct_UClass_ULookAtMovementComponent_NoRegister();
	LOOKATCOMPONENTPLUGIN_API class UClass* Z_Construct_UClass_ULookAtMovementComponent();
	LOOKATCOMPONENTPLUGIN_API class UPackage* Z_Construct_UPackage__Script_LookAtComponentPlugin();
	UClass* Z_Construct_UClass_ULookAtMovementComponent_NoRegister()
	{
		return ULookAtMovementComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_ULookAtMovementComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovementComponent();
			Z_Construct_UPackage__Script_LookAtComponentPlugin();
			OuterClass = ULookAtMovementComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLockYaw, ULookAtMovementComponent, bool);
				UProperty* NewProp_bLockYaw = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLockYaw"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLockYaw, ULookAtMovementComponent), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bLockYaw, ULookAtMovementComponent), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLockPitch, ULookAtMovementComponent, bool);
				UProperty* NewProp_bLockPitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLockPitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLockPitch, ULookAtMovementComponent), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bLockPitch, ULookAtMovementComponent), sizeof(bool), true);
				UProperty* NewProp_AimSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AimSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AimSpeed, ULookAtMovementComponent), 0x0010000000000005);
				UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, ULookAtMovementComponent), 0x0010000000000005, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_LocationToLookAt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LocationToLookAt"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LocationToLookAt, ULookAtMovementComponent), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_ActorToLookAt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorToLookAt"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ActorToLookAt, ULookAtMovementComponent), 0x0010000000000005, Z_Construct_UClass_AActor_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(LookAtLocalPlayer, ULookAtMovementComponent, bool);
				UProperty* NewProp_LookAtLocalPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LookAtLocalPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(LookAtLocalPlayer, ULookAtMovementComponent), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(LookAtLocalPlayer, ULookAtMovementComponent), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LookAtMovementComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("This component will cause an actor to keep itself oriented toward the local player or another actor or point in the world. Collision is disabled during movement."));
				MetaData->SetValue(NewProp_bLockYaw, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_bLockYaw, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_bLockYaw, TEXT("ToolTip"), TEXT("If `true`, prevents yaw"));
				MetaData->SetValue(NewProp_bLockPitch, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_bLockPitch, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_bLockPitch, TEXT("ToolTip"), TEXT("If `true`, prevents pitch rotation"));
				MetaData->SetValue(NewProp_AimSpeed, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_AimSpeed, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_AimSpeed, TEXT("ToolTip"), TEXT("Speed that it rotates"));
				MetaData->SetValue(NewProp_Offset, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_Offset, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_Offset, TEXT("ToolTip"), TEXT("An optional offset value. If a value other than `ZeroRotator` is specified, this rotation will be applied after the look at rotation"));
				MetaData->SetValue(NewProp_LocationToLookAt, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_LocationToLookAt, TEXT("EditCondition"), TEXT("!LookAtLocalPlayer"));
				MetaData->SetValue(NewProp_LocationToLookAt, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_LocationToLookAt, TEXT("ToolTip"), TEXT("If 'LookAtLocalPlayer` is `false` and `ActorToLookAt` is `NULL`, then the object this component is attached to will orient itself towards this world location. Defaults to world origin."));
				MetaData->SetValue(NewProp_ActorToLookAt, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_ActorToLookAt, TEXT("EditCondition"), TEXT("!LookAtLocalPlayer"));
				MetaData->SetValue(NewProp_ActorToLookAt, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_ActorToLookAt, TEXT("ToolTip"), TEXT("If `LookAtLocalPlayer` is `false`, then the actor this component is attached to will orient itself towards this actor, if one is specified"));
				MetaData->SetValue(NewProp_LookAtLocalPlayer, TEXT("Category"), TEXT("Look At Component"));
				MetaData->SetValue(NewProp_LookAtLocalPlayer, TEXT("ModuleRelativePath"), TEXT("Public/LookAtMovementComponent.h"));
				MetaData->SetValue(NewProp_LookAtLocalPlayer, TEXT("ToolTip"), TEXT("If `true`, the object will orient itself toward the local player. If false, then it will look at `ActorToLookAt` if not NULL, otherwise, it will use `LocationToLookAt`. If none of these are provided, it will look at the world origin."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULookAtMovementComponent(Z_Construct_UClass_ULookAtMovementComponent, &ULookAtMovementComponent::StaticClass, TEXT("ULookAtMovementComponent"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULookAtMovementComponent);
	UPackage* Z_Construct_UPackage__Script_LookAtComponentPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/LookAtComponentPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x96C638D5;
			Guid.B = 0x76E40E83;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
